{"remainingRequest":"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/babel-loader/lib/index.js!/Users/mshafiqueqadri/Documents/test/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mshafiqueqadri/Documents/test/front-end/node_modules/vue-tinymce-editor/src/components/TinymceVue.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/vue-tinymce-editor/src/components/TinymceVue.vue","mtime":1519421050000},{"path":"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1530886141204},{"path":"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n// Import TinyMCE\nimport tinymce from 'tinymce/tinymce'; // A theme is also required\n\nimport 'tinymce/themes/modern/theme'; // Any plugins you want to use has to be imported\n\nimport 'tinymce/plugins/advlist';\nimport 'tinymce/plugins/wordcount';\nimport 'tinymce/plugins/autolink';\nimport 'tinymce/plugins/autosave';\nimport 'tinymce/plugins/charmap';\nimport 'tinymce/plugins/codesample';\nimport 'tinymce/plugins/contextmenu';\nimport 'tinymce/plugins/emoticons';\nimport 'tinymce/plugins/fullscreen';\nimport 'tinymce/plugins/hr';\nimport 'tinymce/plugins/imagetools';\nimport 'tinymce/plugins/insertdatetime';\nimport 'tinymce/plugins/link';\nimport 'tinymce/plugins/media';\nimport 'tinymce/plugins/noneditable';\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/print';\nimport 'tinymce/plugins/searchreplace';\nimport 'tinymce/plugins/tabfocus';\nimport 'tinymce/plugins/template';\nimport 'tinymce/plugins/textpattern';\nimport 'tinymce/plugins/visualblocks';\nimport 'tinymce/plugins/anchor';\nimport 'tinymce/plugins/autoresize';\nimport 'tinymce/plugins/bbcode';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/colorpicker';\nimport 'tinymce/plugins/directionality';\nimport 'tinymce/plugins/fullpage';\nimport 'tinymce/plugins/help';\nimport 'tinymce/plugins/image';\nimport 'tinymce/plugins/importcss';\nimport 'tinymce/plugins/legacyoutput';\nimport 'tinymce/plugins/lists';\nimport 'tinymce/plugins/nonbreaking';\nimport 'tinymce/plugins/pagebreak';\nimport 'tinymce/plugins/preview';\nimport 'tinymce/plugins/save';\nimport 'tinymce/plugins/spellchecker';\nimport 'tinymce/plugins/table';\nimport 'tinymce/plugins/textcolor';\nimport 'tinymce/plugins/toc';\nimport 'tinymce/plugins/visualchars';\nimport 'tinymce/skins/lightgray/skin.min.css';\nexport default {\n  name: 'tinymce',\n  props: {\n    id: {\n      type: String,\n      required: true\n    },\n    htmlClass: {\n      default: '',\n      type: String\n    },\n    value: {\n      default: ''\n    },\n    plugins: {\n      default: function () {\n        return ['advlist autolink lists link image charmap print preview hr anchor pagebreak', 'searchreplace wordcount visualblocks visualchars code fullscreen', 'insertdatetime media nonbreaking save table contextmenu directionality', 'template paste textcolor colorpicker textpattern imagetools toc help emoticons hr codesample'];\n      },\n      type: Array\n    },\n    toolbar1: {\n      default: 'formatselect | bold italic  strikethrough  forecolor backcolor | link | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent  | removeformat',\n      type: String\n    },\n    toolbar2: {\n      default: '',\n      type: String\n    },\n    other_options: {\n      default: function () {\n        return {};\n      },\n      type: Object\n    },\n    readonly: {\n      default: false,\n      type: Boolean\n    }\n  },\n\n  data() {\n    return {\n      content: '',\n      editor: null,\n      cTinyMce: null,\n      checkerTimeout: null,\n      isTyping: false\n    };\n  },\n\n  mounted() {\n    this.content = this.value;\n    this.init();\n  },\n\n  beforeDestroy() {\n    this.editor.destroy();\n  },\n\n  watch: {\n    value: function (newValue) {\n      if (!this.isTyping) {\n        if (this.editor !== null) this.editor.setContent(newValue);else this.content = newValue;\n      }\n    },\n\n    readonly(value) {\n      if (value) {\n        this.editor.setMode('readonly');\n      } else {\n        this.editor.setMode('design');\n      }\n    }\n\n  },\n  methods: {\n    init() {\n      let options = {\n        selector: '#' + this.id,\n        skin: false,\n        toolbar1: this.toolbar1,\n        toolbar2: this.toolbar2,\n        plugins: this.plugins,\n        init_instance_callback: this.initEditor\n      };\n      tinymce.init(this.concatAssciativeArrays(options, this.other_options));\n    },\n\n    initEditor(editor) {\n      this.editor = editor;\n      editor.on('KeyUp', e => {\n        this.submitNewContent();\n      });\n      editor.on('Change', e => {\n        if (this.editor.getContent() !== this.value) {\n          this.submitNewContent();\n        }\n\n        this.$emit('editorChange', e);\n      });\n      editor.on('init', e => {\n        editor.setContent(this.content);\n        this.$emit('input', this.content);\n      });\n\n      if (this.readonly) {\n        this.editor.setMode('readonly');\n      } else {\n        this.editor.setMode('design');\n      }\n\n      this.$emit('editorInit', editor);\n    },\n\n    concatAssciativeArrays(array1, array2) {\n      if (array2.length === 0) return array1;\n      if (array1.length === 0) return array2;\n      let dest = [];\n\n      for (let key in array1) dest[key] = array1[key];\n\n      for (let key in array2) dest[key] = array2[key];\n\n      return dest;\n    },\n\n    submitNewContent() {\n      this.isTyping = true;\n      if (this.checkerTimeout !== null) clearTimeout(this.checkerTimeout);\n      this.checkerTimeout = setTimeout(() => {\n        this.isTyping = false;\n      }, 300);\n      this.$emit('input', this.editor.getContent());\n    }\n\n  }\n};",{"version":3,"sources":["TinymceVue.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n      <textarea :id=\"id\">{{ content }}</textarea>\n  </div>\n</template>\n\n<script>\n   // Import TinyMCE\n    import tinymce from 'tinymce/tinymce';\n\n    // A theme is also required\n    import 'tinymce/themes/modern/theme';\n\n    // Any plugins you want to use has to be imported\n    import 'tinymce/plugins/advlist';\n    import 'tinymce/plugins/wordcount';\n    import 'tinymce/plugins/autolink';\n    import 'tinymce/plugins/autosave';\n    import 'tinymce/plugins/charmap';\n    import 'tinymce/plugins/codesample';\n    import 'tinymce/plugins/contextmenu';\n    import 'tinymce/plugins/emoticons';\n    import 'tinymce/plugins/fullscreen';\n    import 'tinymce/plugins/hr';\n    import 'tinymce/plugins/imagetools';\n    import 'tinymce/plugins/insertdatetime';\n    import 'tinymce/plugins/link';\n    import 'tinymce/plugins/media';\n    import 'tinymce/plugins/noneditable';\n    import 'tinymce/plugins/paste';\n    import 'tinymce/plugins/print';\n    import 'tinymce/plugins/searchreplace';\n    import 'tinymce/plugins/tabfocus';\n    import 'tinymce/plugins/template';\n    import 'tinymce/plugins/textpattern';\n    import 'tinymce/plugins/visualblocks';\n    import 'tinymce/plugins/anchor';\n    import 'tinymce/plugins/autoresize';\n    import 'tinymce/plugins/bbcode';\n    import 'tinymce/plugins/code';\n    import 'tinymce/plugins/colorpicker';\n    import 'tinymce/plugins/directionality';\n    import 'tinymce/plugins/fullpage';\n    import 'tinymce/plugins/help';\n    import 'tinymce/plugins/image';\n    import 'tinymce/plugins/importcss';\n    import 'tinymce/plugins/legacyoutput';\n    import 'tinymce/plugins/lists';\n    import 'tinymce/plugins/nonbreaking';\n    import 'tinymce/plugins/pagebreak';\n    import 'tinymce/plugins/preview';\n    import 'tinymce/plugins/save';\n    import 'tinymce/plugins/spellchecker';\n    import 'tinymce/plugins/table';\n    import 'tinymce/plugins/textcolor';\n    import 'tinymce/plugins/toc';\n    import 'tinymce/plugins/visualchars';\n    \n    import 'tinymce/skins/lightgray/skin.min.css'\n   \n    export default {\n        name: 'tinymce',\n        props: { \n                id : {\n                    type : String,\n                    required : true\n                },\n                htmlClass : { default : '', type : String},\n                value : { default : '' },\n                plugins : { default : function(){ \n                                    return [\n                                        'advlist autolink lists link image charmap print preview hr anchor pagebreak',\n                                        'searchreplace wordcount visualblocks visualchars code fullscreen',\n                                        'insertdatetime media nonbreaking save table contextmenu directionality',\n                                        'template paste textcolor colorpicker textpattern imagetools toc help emoticons hr codesample'\n                                    ];\n                                } , type: Array\n                            },\n                toolbar1: { default :'formatselect | bold italic  strikethrough  forecolor backcolor | link | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent  | removeformat', type: String},\n                toolbar2: { default : '', type: String },\n                other_options: { default : function() { return {}; }, type: Object},\n                readonly: { default: false, type: Boolean }\n        },\n        data(){\n            return {\n                content : '',\n                editor : null,\n                cTinyMce : null,\n                checkerTimeout: null,\n                isTyping : false\n            }; \n        },\n        mounted(){\n            this.content = this.value;\n            this.init();  \n        },\n        beforeDestroy () {\n            this.editor.destroy();\n        },\n        watch: {\n            value : function (newValue){\n                if(!this.isTyping){\n                    if(this.editor !== null)\n                        this.editor.setContent(newValue);\n                    else\n                        this.content = newValue;\n                }\n            },\n            readonly(value){\n                if(value){\n                    this.editor.setMode('readonly');\n                } else {\n                    this.editor.setMode('design');\n                }\n            }\n        },\n        methods: {\n            init(){\n                let options = {\n                    selector: '#' + this.id,\n                    skin: false,\n                    toolbar1: this.toolbar1,\n                    toolbar2: this.toolbar2,\n                    plugins: this.plugins,\n                    init_instance_callback : this.initEditor\n                };\n                tinymce.init(this.concatAssciativeArrays(options, this.other_options));\n            },\n            initEditor(editor) {\n                this.editor = editor;\n                editor.on('KeyUp', (e) => {\n                    this.submitNewContent();\n                });\n                editor.on('Change', (e) => {\n                    if(this.editor.getContent() !== this.value){\n                        this.submitNewContent();\n                    }\n                    this.$emit('editorChange', e);\n                });\n                editor.on('init', (e) => {\n                    editor.setContent(this.content);\n                    this.$emit('input', this.content);\n                });\n                if(this.readonly){\n                    this.editor.setMode('readonly');\n                } else {\n                    this.editor.setMode('design');\n                }\n\n                this.$emit('editorInit', editor);\n            },\n            concatAssciativeArrays(array1, array2){\n                if(array2.length === 0) return array1;\n                if(array1.length === 0) return array2;\n                let dest = [];\n                for ( let key in array1) dest[key] = array1[key];\n                for ( let key in array2) dest[key] = array2[key];\n                return dest;\n            },\n            submitNewContent(){\n                this.isTyping = true;\n                if(this.checkerTimeout !== null)\n                    clearTimeout(this.checkerTimeout);\n                    this.checkerTimeout = setTimeout(()=>{\n                        this.isTyping = false;\n                    }, 300);\n\n                this.$emit('input', this.editor.getContent());\n            }\n        }\n    }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"],"sourceRoot":"node_modules/vue-tinymce-editor/src/components"}]}