{"remainingRequest":"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/babel-loader/lib/index.js!/Users/mshafiqueqadri/Documents/test/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mshafiqueqadri/Documents/test/front-end/src/components/weather.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/mshafiqueqadri/Documents/test/front-end/src/components/weather.vue","mtime":1530898093548},{"path":"/Users/mshafiqueqadri/Documents/test/front-end/package.json","mtime":1530893706294},{"path":"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1530886141204},{"path":"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nexport default {\n  name: 'weather',\n  props: ['weather'],\n  filters: {\n    showDate: function showDate(value) {\n      if (value) {\n        return moment(String(value)).format('dddd, DD MMM YYYY');\n      }\n    }\n  }\n};",{"version":3,"sources":["weather.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBA,OAAA,MAAA,MAAA,QAAA;AACA,eAAA;AACA,QAAA,SADA;AAEA,SAAA,CAAA,SAAA,CAFA;AAGA,WAAA;AACA,cAAA,yBAAA;AACA,UAAA,KAAA,EAAA;AACA,eAAA,OAAA,OAAA,KAAA,CAAA,EAAA,MAAA,CAAA,mBAAA,CAAA;AACA;AACA;AALA;AAHA,CAAA","sourcesContent":["<template>\n    <div class=\"col-md-3 mt-20\">\n        <div class=\"card\">\n            <!-- <img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\"> -->\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{{weather.title}}</h5>\n                <p class=\"card-text\"><b>{{'city_name' | translate}}:</b> {{weather.title}}</p>\n            </div>\n            <ul class=\"list-group list-group-flush\">\n                <li class=\"list-group-item\"><b>{{'min_temperature' | translate}}: </b>{{weather.consolidated_weather.min_temp | round}}</li>\n                <li class=\"list-group-item\"><b>{{'max_temperature' | translate}}: </b>{{weather.consolidated_weather.max_temp | round}}</li>\n                <li class=\"list-group-item\"><b>{{'date' | translate}}: </b>{{weather.consolidated_weather.applicable_date | showDate}}</li>\n            </ul>\n            <div class=\"card-body\" v-if=\"$route.name != 'ViewDetail' && $route.name != 'SearchResult'\">\n                <a href=\"#\" class=\"card-link\"><router-link :to=\"{name: 'ViewDetail', params: {woeid: weather.woeid}}\">{{'view_detail'| translate}}</router-link></a>\n            </div>\n        </div>\n    \n    </div>\n</template>\n\n<script>\n    import moment from 'moment'\n    export default {\n        name: 'weather',\n        props: ['weather'],\n        filters: {\n            showDate: value => {\n                if (value) {\n                    return moment(String(value)).format('dddd, DD MMM YYYY')\n                }\n            }\n        }\n    }\n</script>\n"],"sourceRoot":"src/components"}]}