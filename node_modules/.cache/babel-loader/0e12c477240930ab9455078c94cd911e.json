{"remainingRequest":"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/babel-loader/lib/index.js!/Users/mshafiqueqadri/Documents/test/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mshafiqueqadri/Documents/test/front-end/src/pages/auth/signup.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/mshafiqueqadri/Documents/test/front-end/src/pages/auth/signup.vue","mtime":1530825741517},{"path":"/Users/mshafiqueqadri/Documents/test/front-end/package.json","mtime":1530885737026},{"path":"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1530886141204},{"path":"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  name: 'login',\n  data: function data() {\n    return {\n      password_toggle: false,\n      user_form: {\n        name: '',\n        email: '',\n        password: ''\n      },\n      errors: {}\n    };\n  },\n  mounted: function mounted() {\n    if (this.user.isLoggedIn) {\n      this.$router.push('/home');\n    }\n  },\n  methods: _objectSpread({}, mapActions(['doSingup']), {\n    signup: function signup() {\n      var _this = this;\n\n      this.doSingup(this.user_form).then(function (res) {\n        _this.$toast.success(res.message);\n\n        _this.$router.push({\n          name: 'Home'\n        });\n      }, function (error) {\n        _this.errors = error.body.errors;\n      });\n    }\n  }),\n  computed: mapState(['user'])\n};",{"version":3,"sources":["signup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SACA,QADA,EAEA,UAFA,QAGA,MAHA;AAIA,eAAA;AACA,QAAA,OADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,uBAAA,KADA;AAEA,iBAAA;AACA,cAAA,EADA;AAEA,eAAA,EAFA;AAGA,kBAAA;AAHA,OAFA;AAOA,cAAA;AAPA,KAAA;AASA,GAZA;AAaA,SAbA,qBAaA;AACA,QAAA,KAAA,IAAA,CAAA,UAAA,EAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA;AACA,GAjBA;AAkBA,6BACA,WAAA,CAAA,UAAA,CAAA,CADA;AAEA,UAFA,oBAEA;AAAA;;AACA,WAAA,QAAA,CAAA,KAAA,SAAA,EAAA,IAAA,CAAA,eAAA;AACA,cAAA,MAAA,CAAA,OAAA,CAAA,IAAA,OAAA;;AACA,cAAA,OAAA,CAAA,IAAA,CAAA;AAAA,gBAAA;AAAA,SAAA;AACA,OAHA,EAIA,iBAAA;AACA,cAAA,MAAA,GAAA,MAAA,IAAA,CAAA,MAAA;AACA,OANA;AAQA;AAXA,IAlBA;AA+BA,YAAA,SAAA,CAAA,MAAA,CAAA;AA/BA,CAAA","sourcesContent":["<template>\n    <div>\n        <div class=\"imgcontainer\">\n            <img src=\"http://www.gitesoft.com/wp-content/uploads/2015/05/gs.png\" alt=\"Avatar\" class=\"avatar\">\n        </div>\n    \n        <div class=\"container text-left\">\n            <label for=\"uname\"><b>{{'name' | translate}}</b></label>\n            <input type=\"text\" :placeholder=\"'name' | translate\" name=\"uname\" v-model=\"user_form.name\" required>\n            <validation-error v-if=\"errors.name\" :errors=\"errors.name\"></validation-error>\n\n            <label for=\"email\"><b>{{'email' | translate}}</b></label>\n            <input type=\"text\" :placeholder=\"'email' | translate\" name=\"email\" v-model=\"user_form.email\" required>\n            <validation-error v-if=\"errors.email\" :errors=\"errors.email\"></validation-error>\n\n            <label for=\"psw\"><b>{{'password' | translate}}</b></label>\n            <input type=\"password\" :placeholder=\"'password' | translate\" name=\"psw\" v-model=\"user_form.password\" required>\n            <validation-error v-if=\"errors.password\" :errors=\"errors.password\"></validation-error>\n\n            <label for=\"psw1\"><b>{{'password_confirmation' | translate}}</b></label>\n            <input type=\"password\" :placeholder=\"'password_confirmation' | translate\" name=\"psw1\" v-model=\"user_form.password_confirmation\" required>\n            <button type=\"button\" @click=\"signup\">{{'signup' | translate}}</button>\n            <label>\n                <router-link :to=\"{name: 'Login'}\">{{'already_account' | translate}}</router-link>\n            </label>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {\n        mapState,\n        mapActions\n    } from 'vuex'\n    export default {\n        name: 'login',\n        data() {\n            return {\n                password_toggle: false,\n                user_form: {\n                    name: '',\n                    email: '',\n                    password: ''\n                },\n                errors: {}\n            }\n        },\n        mounted() {\n            if (this.user.isLoggedIn) {\n                this.$router.push('/home')\n            }\n        },\n        methods: {\n            ...mapActions(['doSingup']),\n            signup() {\n                this.doSingup(this.user_form).then( res => {\n                        this.$toast.success(res.message)\n                        this.$router.push({name: 'Home'})\n                    },\n                    error => {\n                        this.errors = error.body.errors\n                    }\n                )\n            }\n        },\n        computed: mapState(['user'])\n    }\n</script>\n\n<style scoped>\n    /* Bordered form */\n    \n    form {\n        border: 3px solid #f1f1f1;\n    }\n    \n    \n    /* Full-width inputs */\n    \n    input[type=text],\n    input[type=password] {\n        width: 100%;\n        padding: 12px 20px;\n        margin: 8px 0;\n        display: inline-block;\n        border: 1px solid #ccc;\n        box-sizing: border-box;\n    }\n    \n    \n    /* Set a style for all buttons */\n    \n    button {\n        background-color: #4CAF50;\n        color: white;\n        padding: 14px 20px;\n        margin: 8px 0;\n        border: none;\n        cursor: pointer;\n        width: 100%;\n    }\n    \n    \n    /* Add a hover effect for buttons */\n    \n    button:hover {\n        opacity: 0.8;\n    }\n    \n    \n    /* Extra style for the cancel button (red) */\n    \n    .cancelbtn {\n        width: auto;\n        padding: 10px 18px;\n        background-color: #f44336;\n    }\n    \n    \n    /* Center the avatar image inside this container */\n    \n    .imgcontainer {\n        text-align: center;\n        margin: 24px 0 12px 0;\n    }\n    \n    \n    /* Avatar image */\n    \n    img.avatar {\n        width: 40%;\n        border-radius: 50%;\n    }\n    \n    \n    /* Add padding to containers */\n    \n    .container {\n        padding: 16px;\n    }\n    \n    \n    /* The \"Forgot password\" text */\n    \n    span.psw {\n        float: right;\n        padding-top: 16px;\n    }\n    \n    \n    /* Change styles for span and cancel button on extra small screens */\n    \n    @media screen and (max-width: 300px) {\n        span.psw {\n            display: block;\n            float: none;\n        }\n        .cancelbtn {\n            width: 100%;\n        }\n    }\n</style>\n"],"sourceRoot":"src/pages/auth"}]}