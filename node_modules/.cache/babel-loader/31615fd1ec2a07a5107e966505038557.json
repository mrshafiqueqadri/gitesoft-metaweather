{"remainingRequest":"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/babel-loader/lib/index.js!/Users/mshafiqueqadri/Documents/test/front-end/node_modules/eslint-loader/index.js??ref--13-0!/Users/mshafiqueqadri/Documents/test/front-end/src/services/Http.js","dependencies":[{"path":"/Users/mshafiqueqadri/Documents/test/front-end/src/services/Http.js","mtime":1530890213047},{"path":"/Users/mshafiqueqadri/Documents/test/front-end/package.json","mtime":1530893706294},{"path":"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1530886141204},{"path":"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/mshafiqueqadri/Documents/test/front-end/node_modules/eslint-loader/index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport VueResource from 'vue-resource';\nimport { API } from '@/environment'; // import store from '@/store'\n\nVue.use(VueResource);\n/**\n * @param {String} url\n * @return { Promise }\n */\n\nexport var get = function get(url) {\n  return new Promise(function (resolve, reject) {\n    Vue.http.get(\"\".concat(API, \"/\").concat(url)).then(function (response) {\n      resolve(response);\n    }, function (error) {\n      reject(error);\n    });\n  });\n};\n/**\n * Used to Insert Record\n * @param {String} url String\n * @param {Object} data Object\n * @return { Promise } mixed\n */\n\nexport var put = function put(url, data) {\n  return new Promise(function (resolve, reject) {\n    Vue.http.put(\"\".concat(API, \"/\").concat(url), data || {}).then(function (response) {\n      resolve(response);\n    }, function (error) {\n      reject(error);\n    });\n  });\n};\n/**\n * Used to Insert Record\n * @param {String} url String\n * @param {Object} data Object\n * @return { Promise } mixed\n */\n\nexport var patch = function patch(url, data) {\n  return new Promise(function (resolve, reject) {\n    Vue.http.patch(\"\".concat(API, \"/\").concat(url), data || {}).then(function (response) {\n      resolve(response);\n    }, function (error) {\n      reject(error);\n    });\n  });\n};\n/**\n * Used to Delete Record\n * @param {String} url String\n * @return { Promise } mixed\n */\n\nexport var del = function del(url) {\n  return new Promise(function (resolve, reject) {\n    Vue.http.delete(\"\".concat(API, \"/\").concat(url)).then(function (response) {\n      resolve(response);\n    }, function (error) {\n      reject(error);\n    });\n  });\n};\nexport var delWithBody = function delWithBody(url, body) {\n  return Vue.http.delete(\"\".concat(API, \"/\").concat(url), {\n    body: body\n  });\n};\n/**\n * Used to Insert/Update record\n * @param {String} url String\n * @param { Object } data Object\n * @return { Promise } mixed\n */\n\nexport var post = function post(url, data) {\n  return new Promise(function (resolve, reject) {\n    Vue.http.post(\"\".concat(API, \"/\").concat(url), data).then(function (response) {\n      resolve(response);\n    }, function (error) {\n      reject(error);\n    });\n  });\n};\nexport var setToken = function setToken() {\n  Vue.http.interceptors.push(function (request) {\n    // let token = store.state.user.token || ''\n    request.headers.set('X-CSRF-TOKEN', 'TOKEN');\n    request.headers.set('Authorization', \"Bearer \".concat(token));\n  });\n};",{"version":3,"sources":["src/services/Http.js"],"names":["Vue","VueResource","API","use","get","url","Promise","resolve","reject","http","then","response","error","put","data","patch","del","delete","delWithBody","body","post","setToken","interceptors","push","request","headers","set","token"],"mappings":"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","sourceRoot":"/Users/mshafiqueqadri/Documents/test/front-end","sourcesContent":["\nimport Vue from 'vue'\nimport VueResource from 'vue-resource'\nimport { API } from '@/environment'\n// import store from '@/store'\n\nVue.use(VueResource)\n\n/**\n * @param {String} url\n * @return { Promise }\n */\nexport const get = (url) => {\n  return new Promise((resolve, reject) => {\n    Vue.http.get(`${API}/${url}`).then(response => {\n      resolve(response)\n    }, error => {\n      reject(error)\n    })\n  })\n}\n\n/**\n * Used to Insert Record\n * @param {String} url String\n * @param {Object} data Object\n * @return { Promise } mixed\n */\n\nexport const put = (url, data) => {\n  return new Promise((resolve, reject) => {\n    Vue.http.put(`${API}/${url}`, data || {}).then(response => {\n      resolve(response)\n    }, error => {\n      reject(error)\n    })\n  })\n}\n\n/**\n * Used to Insert Record\n * @param {String} url String\n * @param {Object} data Object\n * @return { Promise } mixed\n */\n\nexport const patch = (url, data) => {\n  return new Promise((resolve, reject) => {\n    Vue.http.patch(`${API}/${url}`, data || {}).then(response => {\n      resolve(response)\n    }, error => {\n      reject(error)\n    })\n  })\n}\n\n/**\n * Used to Delete Record\n * @param {String} url String\n * @return { Promise } mixed\n */\nexport const del = (url) => {\n  return new Promise((resolve, reject) => {\n    Vue.http.delete(`${API}/${url}`).then(response => {\n      resolve(response)\n    }, error => {\n      reject(error)\n    })\n  })\n}\n\nexport const delWithBody = (url, body) =>\n  Vue.http.delete(`${API}/${url}`, { body })\n\n/**\n * Used to Insert/Update record\n * @param {String} url String\n * @param { Object } data Object\n * @return { Promise } mixed\n */\nexport const post = (url, data) => {\n  return new Promise((resolve, reject) => {\n    Vue.http.post(`${API}/${url}`, data).then(response => {\n      resolve(response)\n    }, error => {\n      reject(error)\n    })\n  })\n}\n\nexport const setToken = () => {\n  Vue.http.interceptors.push(function (request) {\n    // let token = store.state.user.token || ''\n    request.headers.set('X-CSRF-TOKEN', 'TOKEN')\n    request.headers.set('Authorization', `Bearer ${token}`)\n  })\n}\n"]}]}